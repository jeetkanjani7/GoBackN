//
// Generated file, do not edit! Created by nedtool 5.0 from d_pdu.msg.
//

#ifndef __D_PDU_M_H
#define __D_PDU_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0500
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>d_pdu.msg:20</tt> by nedtool.
 * <pre>
 * packet D_pdu
 * {
 *     int id;
 *     int type;		//0-->data and 1-->ack
 *     char alphabet;
 *     string msg;
 * }
 * </pre>
 */
class D_pdu : public ::omnetpp::cPacket
{
  protected:
    int id;
    int type;
    char alphabet;
    ::omnetpp::opp_string msg;

  private:
    void copy(const D_pdu& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const D_pdu&);

  public:
    D_pdu(const char *name=nullptr, int kind=0);
    D_pdu(const D_pdu& other);
    virtual ~D_pdu();
    D_pdu& operator=(const D_pdu& other);
    virtual D_pdu *dup() const {return new D_pdu(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b);

    // field getter/setter methods
    virtual int getId() const;
    virtual void setId(int id);
    virtual int getType() const;
    virtual void setType(int type);
    virtual char getAlphabet() const;
    virtual void setAlphabet(char alphabet);
    virtual const char * getMsg() const;
    virtual void setMsg(const char * msg);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const D_pdu& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, D_pdu& obj) {obj.parsimUnpack(b);}


#endif // ifndef __D_PDU_M_H

